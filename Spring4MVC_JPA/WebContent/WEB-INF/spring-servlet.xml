<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
    
    <!-- It register the beans in context and scan the annotations  -->
    <context:component-scan base-package="com.medic.controller" />
    
    <!-- This helps in mapping the logical view names to directly view  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
     <!-- This resolves messages from resource bundles for different locales -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages" />
    </bean>
    
    
    <!-- To validate the posted add employee form -->
    <bean id="employeeValidator" class="com.medic.validator.EmployeeValidator" />
    
    
    
    
     <!-- This produces a container-managed EntityManagerFactory;  -->
    <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      
      <!-- This makes /META-INF/persistence.xml is no longer necessary -->
      <property name="packagesToScan" value="com.medic.model" />
      
      <!-- JpaVendorAdapter implementation for Hibernate EntityManager. -->
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">validate</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
         </props>
      </property>
   </bean>
   
   
   <!-- Simple implementation of the standard JDBC DataSource interface -->
   
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="org.postgresql.Driver" />
      <property name="url" value="jdbc:postgresql://localhost:5432/moi" />
      <property name="username" value="postgres" />
      <property name="password" value="admin@123" />
   </bean>
     
     
     
      <!-- This transaction manager. -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactoryBean" />
   </bean>
    
    
    
   <!-- responsible for registering the necessary Spring -->
   <tx:annotation-driven />
   
      
   
   <!--Bean IOC ##################### -->
   
   <bean name="employeeManager" class="com.medic.servicemanagerImpl.EmployeeManagerImpl"></bean>
   <bean name="employeedao" class="com.medic.daoImpl.EmployeeDAOImpl"></bean>
   
    
   
   
   
   
     
  </beans>
  